{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Echo",
	"patterns": [
	  {
		"include": "#keywords"
	  },
	  {
		"include": "#operators"
	  },
	  {
		"include": "#strings"
	  },
	  {
		"include": "#comments"
	  },
	  {
		"include": "#numbers"
	  },
	  {
		"include": "#functions"
	  },
	  {
		"include": "#types"
	  },
	  {
		"include": "#variables"
	  }
	],
	"repository": {
	  "keywords": {
		"patterns": [
		  {
			"name": "keyword.control.echo",
			"match": "\\b(if|else|while|for|foreach|return|break|continue|in|by|fn)\\b"
		  },
		  {
			"name": "keyword.other.echo",
			"match": "\\b(import|export|from|as)\\b"
		  }
		]
	  },
	  "operators": {
		"patterns": [
		  {
			"name": "keyword.operator.assignment.echo",
			"match": "=|\\+=|-=|\\*=|/=|%="
		  },
		  {
			"name": "keyword.operator.arithmetic.echo",
			"match": "\\+|-|\\*|/|%"
		  },
		  {
			"name": "keyword.operator.logical.echo",
			"match": "&&|\\|\\||!"
		  },
		  {
			"name": "keyword.operator.comparison.echo",
			"match": "==|!=|>|=|<="
		  }
		]
	  },
	  "strings": {
		"patterns": [
		  {
			"name": "string.quoted.double.echo",
			"begin": "\"",
			"end": "\"",
			"patterns": [
			  {
				"name": "constant.character.escape.echo",
				"match": "\\\\."
			  }
			]
		  },
		  {
			"name": "string.quoted.single.echo",
			"begin": "'",
			"end": "'",
			"patterns": [
			  {
				"name": "constant.character.escape.echo",
				"match": "\\\\."
			  }
			]
		  }
		]
	  },
	  "comments": {
		"patterns": [
		  {
			"name": "comment.line.double-slash.echo",
			"match": "(?<!\\w)//.*$"
		  },
		  {
			"name": "comment.block.echo",
			"begin": "/\\*",
			"end": "\\*/"
		  }
		]
	  },
	  "numbers": {
		"patterns": [
		  {
			"name": "constant.numeric.decimal.echo",
			"match": "\\b[0-9]+(\\.[0-9]+)?\\b"
		  },
		  {
			"name": "constant.numeric.hex.echo",
			"match": "\\b0x[0-9a-fA-F]+\\b"
		  },
		  {
			"name": "constant.numeric.binary.echo",
			"match": "\\b0b[01]+\\b"
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"name": "entity.name.function.echo",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
		  },
		  {
			"name": "support.function.builtin.echo",
			"match": "\\b(say|ask|wait|notify|asInt|asBool|asString|asFloat|trim|upperCase|lowerCase|length|trim|default)\\b"
		  }
		]
	  },
	  "types": {
		"patterns": [
		  {
			"name": "storage.type.echo",
			"match": "\\b(int|float|str|bool|list|hash|dynamic)\\b"
		  }
		]
	  },
	  "variables": {
		"patterns": [
		  {
			"name": "variable.other.constant.echo",
			"match": "\\b[A-Z_][A-Z0-9_]*\\b"
		  },
		  {
			"name": "variable.other.echo",
			"match": "\\b[a-z_][a-zA-Z0-9_]*\\b"
		  }
		]
	  }
	},
	"scopeName": "source.echo"
  }